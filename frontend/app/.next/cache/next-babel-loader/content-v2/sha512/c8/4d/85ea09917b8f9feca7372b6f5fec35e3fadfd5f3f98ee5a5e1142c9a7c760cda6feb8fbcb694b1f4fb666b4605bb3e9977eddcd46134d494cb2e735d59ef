{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/aobilyq/Documents/Learning/28-gadget-compare-platform/frontend/app/pages/_app.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport App from \"next/app\";\nimport Head from 'next/head';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport '@fortawesome/fontawesome-svg-core/styles.css';\nimport \"nprogress/nprogress.css\";\nimport theme from '../src/theme';\n\nfunction MyApp(props) {\n  const {\n    Component,\n    pageProps\n  } = props;\n  React.useEffect(() => {\n    // Remove the server-side injected CSS.\n    const jssStyles = document.querySelector('#jss-server-side');\n\n    if (jssStyles) {\n      jssStyles.parentElement.removeChild(jssStyles);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Gadget Compare Platform\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"viewport\",\n        content: \"minimum-scale=1, initial-scale=1, width=device-width\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n} // Only uncomment this method if you have blocking data requirements for\n// every single page in your application. This disables the ability to\n// perform automatic static optimization, causing every page in your app to\n// be server-side rendered.\n\n\nMyApp.getInitialProps = async appContext => {\n  // calls page's `getInitialProps` and fills `appProps.pageProps`\n  const appProps = await App.getInitialProps(appContext);\n  return _objectSpread({}, appProps);\n};\n\nexport default MyApp;","map":{"version":3,"sources":["/Users/aobilyq/Documents/Learning/28-gadget-compare-platform/frontend/app/pages/_app.tsx"],"names":["React","App","Head","ThemeProvider","CssBaseline","theme","MyApp","props","Component","pageProps","useEffect","jssStyles","document","querySelector","parentElement","removeChild","getInitialProps","appContext","appProps"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,SAASC,aAAT,QAA8B,0BAA9B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AAEA,OAAO,kCAAP;AACA,OAAO,gCAAP;AACA,OAAO,8CAAP;AACA,OAAO,yBAAP;AAEA,OAAOC,KAAP,MAAkB,cAAlB;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAgC;AAE5B,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA2BF,KAAjC;AAEAP,EAAAA,KAAK,CAACU,SAAN,CAAgB,MAAM;AAClB;AACA,UAAMC,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAuB,kBAAvB,CAAlB;;AACA,QAAIF,SAAJ,EAAe;AACXA,MAAAA,SAAS,CAACG,aAAV,CAAwBC,WAAxB,CAAoCJ,SAApC;AACH;AACJ,GAND,EAMG,EANH;AAQA,sBACI;AAAA,4BACI,QAAC,IAAD;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,IAAI,EAAC,UAAX;AAAsB,QAAA,OAAO,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI,QAAC,aAAD;AAAe,MAAA,KAAK,EAAEN,KAAtB;AAAA,8BACI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,SAAD,oBAAeI,SAAf;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA,kBADJ;AAYH,C,CAED;AACA;AACA;AACA;;;AACAH,KAAK,CAACU,eAAN,GAAwB,MAAOC,UAAP,IAAkC;AACtD;AACA,QAAMC,QAAQ,GAAG,MAAMjB,GAAG,CAACe,eAAJ,CAAoBC,UAApB,CAAvB;AAEA,2BAAYC,QAAZ;AACH,CALD;;AAOA,eAAeZ,KAAf","sourcesContent":["import React from 'react';\nimport App from \"next/app\";\nimport Head from 'next/head';\nimport type { AppProps, AppContext } from 'next/app';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport 'react-grid-layout/css/styles.css';\nimport 'react-resizable/css/styles.css';\nimport '@fortawesome/fontawesome-svg-core/styles.css';\nimport \"nprogress/nprogress.css\";\n\nimport theme from '../src/theme';\n\nfunction MyApp(props: AppProps) {\n\n    const { Component, pageProps } = props;\n\n    React.useEffect(() => {\n        // Remove the server-side injected CSS.\n        const jssStyles = document.querySelector('#jss-server-side');\n        if (jssStyles) {\n            jssStyles.parentElement.removeChild(jssStyles);\n        }\n    }, []);\n\n    return (\n        <>\n            <Head>\n                <title>Gadget Compare Platform</title>\n                <meta name=\"viewport\" content=\"minimum-scale=1, initial-scale=1, width=device-width\" />\n            </Head>\n            <ThemeProvider theme={theme}>\n                <CssBaseline />\n                <Component {...pageProps} />\n            </ThemeProvider>\n        </>\n    );\n}\n\n// Only uncomment this method if you have blocking data requirements for\n// every single page in your application. This disables the ability to\n// perform automatic static optimization, causing every page in your app to\n// be server-side rendered.\nMyApp.getInitialProps = async (appContext: AppContext) => {\n    // calls page's `getInitialProps` and fills `appProps.pageProps`\n    const appProps = await App.getInitialProps(appContext);\n\n    return { ...appProps };\n}\n\nexport default MyApp;"]},"metadata":{},"sourceType":"module"}